<%- include("../partials/admin/header.ejs") %>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <link rel="stylesheet" href="../../public/css/category.css">
</head>
<body>
  <section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title card-title">Category</h2>
      </div>
    </div>
    <header class="card-header text-center mb-20">
      <form action="/admin/category/" method="get" class="d-inline">
        <div class="input-group input-group-sm border border-1 border-grey rounded-pill" style="width: 500px; margin-left: 230px">
          <input type="text" class="form-control border-0 rounded-pill m-1" placeholder="Search categories" name="search"/>
          <button class="btn" type="submit">Search</button>
        </div>
      </form>
    </header>
    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-3">
            <form id="category-form">
              <div class="mb-4">
                <label for="product_name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" required/>
                <div id="name-error" class="error-message" style="color: red;"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId" required></textarea>
                <div id="description-error" class="error-message" style="color: red;"></div>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">Create category</button>
              </div>
            </form>
          </div>
          <div class="col-md-8 ml-10">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th class="text-center"></th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer Price</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th>List/Unlist</th>
                    <th class="text-start">Edit</th>
                  </tr>
                </thead>
                <tbody>
                  <% cat.reverse().forEach((category,index)=>{ %>
                  <tr>
                    <td></td>
                    <td class="text-start"><%= category.name %></td>
                    <td class="text-start"><%= category.description %></td>
                    <td>
                      <% if(category.categoryOffer){%>
                        <%= category.categoryOffer %>
                        <% }else{%>
                          0%
                          <% } %>
                    </td>
                    <td class="text-start">
                      <% if(category.categoryOffer===0){ %>
                      <button class="btn btn-info" style="width: 100px">
                        <a href="#" class="text-white" onclick="addOffer('<%=category._id%>')">Add Offer</a>
                      </button>
                      <% }else { %>
                      <button class="btn btn-info"style="width: 100px">
                        <a href="#" class="text-white" onclick="removeOffer('<%=category._id%>')">Remove</a>
                      </button>
                      <% } %>
                    </td>
                    <td class="text-start">
                      <% if(category.isListed){ %>
                      <span class="badge rounded-pill alert-success" style="width: 60px">Listed</span>
                      <% }else{ %>
                      <span class="badge rounded-pill alert-danger" style="width: 60px">Unlisted</span>
                      <% } %>
                    </td>
                    <td class="text-start">
                      <% if(category.isListed){ %>
                      <button class="btn btn-danger" style="width: 70px">
                        <a href="/admin/listCategory?id=<%= category._id %>
                          " class="text-white">Unlist</a>
                      </button>
                      <% }else { %>
                      <button class="btn btn-success" style="width: 70px">
                        <a href="/admin/unListCategory?id=<%= category._id %>" class="text-white">List</a>
                      </button>
                      <% } %>
                    </td>
                    <td class="text-start">
                      <a href="/admin/editCategory?id=<%= category._id %>" class="btn btn-info text-white">Edit</a>
                    </td>
                  </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="pagination-container">
      <% if (currentPage > 1) { %>
      <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
      <% } %> <% for (let i = 1; i <= totalPages; i++) { %> <% if (i ===
      currentPage) { %>
      <span class="current-page"><%= i %></span>
      <% } else { %>
      <a href="?page=<%= i %>"><%= i %></a>
      <% } %> <% } %> <% if (currentPage < totalPages) { %>
      <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
      <% } %>
    </div>

  </section>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script>

    document.getElementById("category-form").addEventListener("submit", async function (e) {
      e.preventDefault();

      const name = document.getElementById("product_name").value.trim().toLowerCase();

      const description = document.getElementById("descriptionId").value.trim();
      
    
      document.getElementById("name-error").textContent = "";
  document.getElementById("description-error").textContent = "";


  if (!name || !description) {
    if (!name) {
      document.getElementById("name-error").textContent = "Name is required.";
    }
    if (!description) {
      document.getElementById("description-error").textContent = "Description is required.";
    }
    return;
  }

      try {
        const response = await fetch("/admin/addCategory", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ name, description }),
        });

        const result = await response.json();

        if (response.status === 400) {
          document.getElementById("name-error").textContent = result.error;
       
        }
         else if (response.status === 201) {
          Swal.fire({
            icon: "success",
            title: "Category Added",
            text: result.success,
          }).then(() => {
            document.getElementById("category-form").reset();
            location.reload();
          });
        } else {
          throw new Error("Unexpected error");
        }
      } catch (error) {
        Swal.fire({
          icon: "error",
          title: "Error",
          text: "Something went wrong. Please try again later.",
        });
        console.error("Error:", error);
      }
    });


    async function addOffer(categoryId) {
  const { value: amount } = await Swal.fire({
    title: "Offer in Percentage",
    input: "number",
    inputLabel: "Percentage",
    inputPlaceholder: "%"
  });

  if (amount) {
    try {
      const response = await fetch('/admin/addCategoryOffer', {
        method: "POST",
        headers: {
          'Content-Type': "application/json"
        },
        body: JSON.stringify({
          percentage: amount,
          categoryId: categoryId
        })
      });

      const data = await response.json();
      
      if (response.ok && data.status === true) {
        Swal.fire(
          "Offer added",
          "The offer has been added",
          "success"
        ).then(() => {
          location.reload();
        });
      } else {
        Swal.fire("Failed", data.message || "Adding offer failed", "error");
      }
    } catch (error) {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: error.message || "An error occurred while adding the offer"
      });
    }
  }
}

async function removeOffer(categoryId) {
  const result = await Swal.fire({
    title: "Are you sure?",
    text: "Do you want to remove the offer for this category?",
    icon: "warning",
    showCancelButton: true,
    confirmButtonText: "Yes, remove it!",
    cancelButtonText: "Cancel"
  });
 

  if (result.isConfirmed) {
    try {
      const response = await fetch('/admin/removeCategoryOffer', {
        method: "POST",
        headers: {
          'Content-Type': "application/json"
        },
        body: JSON.stringify({
          categoryId: categoryId
        })
      });

      const data = await response.json();

      if (response.ok && data.status === true) {
        Swal.fire(
          "Offer Removed",
          "The offer has been successfully removed.",
          "success"
        ).then(() => {
          location.reload();
        });
      } else {
        Swal.fire("Failed", data.message || "Removing offer failed", "error");
      }
    } catch (error) {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: error.message || "An error occurred while removing the offer"
      });
    }
  }
}

</script>
<%- include("../partials/admin/footer.ejs") %>
